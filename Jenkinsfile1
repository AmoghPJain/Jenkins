pipeline{
    agent any

    parameters {
        booleanParam(name: 'CLEANUP', defaultValue: false, description: 'Delete workspace before build')
        booleanParam(name: 'FAIL', defaultValue: false, description: 'Fail scenario')
        booleanParam(name: 'CHECKOUT', defaultValue: true, description: 'code checkout stage')
        booleanParam(name: 'BUILD', defaultValue: true, description: 'Build stage')
        
    }

    stages {
        stage('Cleanup'){
            when {
                expression { 
                    params.CLEANUP == true
                    } // Only run this stage if Cleanup parameter is true
            }
            steps {
                deleteDir() // Cleans the workspace before starting the build
                echo 'Workspace cleaned up'
            }
        }

        stage('Fail'){
            when {
                expression { 
                    params.FAIL == true
                    } // Only run this stage if Fail parameter is true
            }
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh '''
                        sleep 10
                        echo "Simulating an error..."
                        exit 1 # This will cause the stage to fail, but the pipeline will continue
                    '''
                }
            }
        }
        stage('Checkout') {
            when {
                expression { 
                    params.CHECKOUT == true
                    } // Only run this stage if Checkout parameter is true
            }
            steps {
                checkout(
                    changelog: false,
                    scm: [$class: 'GitSCM',
                        branches: [[name: 'master']],
                        userRemoteConfigs: [[
                            credentialsId: 'slave_ssh',
                            url: 'https://github.com/AmoghPJain/simple-java-maven-app.git' 
                           ]],
                           extensions: [[$class: 'CloneOption', timeout: 60]] // Clones the repository with a timeout of 60 seconds
                    ]
                    )
            }
        }

        stage('Build') {
            when{
                expression { 
                    params.BUILD == true
                    } // Only run this stage if Build parameter is true
            }
            steps {
                sh '''
                    echo "Building the project..."
                    pwd
                    ls -l
                    mvn --version
                    mvn clean install
                '''
            }
        }
  }
}    